
# 1. Для натурального n создать словарь индекс-значение, состоящий из элементов последовательности 3n + 1.
# Пример:
# Для n = 6: {1: 4, 2: 7, 3: 10, 4: 13, 5: 16, 6: 19}

# n = int(input('Input the number: '))
# new_dict = {}
# for i in range(1, n + 1):
#     new_dict[i] = 3*i + 1
# print(new_dict)


# 2. Задайте список(произвольный). Напишите программу, которая определит, присутствует ли в заданном списке строк некое число.

# any_list = ['4', 'xbckj', 10, True, 'df16hgh', 19]
# num = input('Inter the number: ')
# count = 0
# for i in any_list:
#     i = str(i)
#     if num == i:
#         print(True)
#         count = 1
#         break
# if count == 0:
#     print(False)

# 3. Напишите программу, которая определит позицию второго вхождения строки в списке либо сообщит, что её нет(по индексу).
# Пример:*
# список: ["qwe", "asd", "zxc", "qwe", "ertqwe"], ищем: "qwe", ответ: 3
# список: ["йцу", "фыв", "ячс", "цук", "йцукен", "йцу"], ищем: "йцу", ответ: 5
# список: ["йцу", "фыв", "ячс", "цук", "йцукен"], ищем: "йцу", ответ: -1
# список: ["123", "234", 123, "567"], ищем: "123", ответ: -1
# список: [], ищем: "123", ответ: -1

# user_list = ["qwe", "asd", "zxc", "qwe", "ertqwe"]
# check = input('Введите текст: ')

# count = 0
# for i in range(len(user_list)):
#     if user_list[i] == check:
#         count += 1
#         if count == 2:
#             print(i)
#             break
# if count < 2:
#     print(-1)

# 4. Программа "Именной фильтр". Напишите функцию, которая принимает на вход список с именами людей и возвращает новый список с именами, которые начинаются на гласную букву. В новом списке имя должно начинаться с прописной (большой) буквы, даже если изначально было написано со строчной(маленькой).
# Пример:*
# Введите имена через пробел: Никонор иван Харитон Ульяна яков
# Функция вернула ['Иван', 'Ульяна', 'Яков']

# def name_sort(list):
#     lett_set = ['У', 'Е', 'Ы', 'А', 'О', 'Э', 'Ё', 'И', 'Ю', 'Я']
#     new_list = []
#     for i in list:
#         temp_str = i.capitalize()
#         if temp_str[0] in lett_set:
#             new_list.append(temp_str)
#     return new_list


# list_user = ['Никонор', 'иван', 'Харитон', 'Ульяна', 'яков']
# print(name_sort(list_user))

# Аналогичный вариант
# names = input('Введите имена через пробел:').title().split()


# def filter(names):
#     a_list = []
#     for i in names:
#         if i[0] in "аоуеияАОУЕИЯ":
#             a_list.append(i)
#     return a_list


# print('Функция вернула имена:', filter(names))


# 5. Программа "Среднее арифметическое". Введите целое число от 3 до 20 (число n). Запросите n вещественных чисел и сохраните их в список. Вызовите функцию, которая принимает на вход список (один аргумент) и возвращает среднее арифметическое всех элементов списка. Результат работы функции сохраните в переменную и выведите на экран.
# Пример:*
# Введите целое число от 3 до 20 3
# Введите число номер 1: 4
# Введите число номер 2: 5
# Введите число номер 3: 6
# Введено чисел: 3
# Это числа: [4.0, 5.0, 6.0]
# Функция вернула среднее арифметическое:  5.0

# def arith_mean(list):
#     sum = 0
#     for i in list:
#         sum += i
#     return sum / len(list)


# n = int(input('Введите целое число от 3 до 20: '))
# any_list = []
# for i in range(n):
#     any_list.append(float(input(f'Введите число номер {i+1}: ')))

# am = arith_mean(any_list)
# print(any_list)
# print(am)


# 6. Напишите программу, которая будет преобразовывать десятичное число в двоичное.
# Пример:*
# 45 -> 101101
# 3 -> 11
# 2 -> 10


# 7. Задайте число. Составьте список чисел Фибоначчи, в том числе для отрицательных индексов.
# Пример:
# для k = 8 список будет выглядеть так: [-21 ,13, -8, 5, −3, 2, −1, 1, 0, 1, 1, 2, 3, 5, 8, 13, 21]
# https://ru.wikipedia.org/wiki/%D0%9D%D0%B5%D0%B3%D0%B0%D1%84%D0%B8%D0%B1%D0%BE%D0%BD%D0%B0%D1%87%D1%87%D0%B8#:~:text=%D0%92%20%D0%BC%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B5%2C%20%D1%87%D0%B8%D1%81%D0%BB%D0%B0%20%D0%BD%D0%B5%D0%B3%D0%B0%D1%84%D0%B8%D0%B1%D0%BE%D0%BD%D0%B0%D1%87%D1%87%D0%B8%20%E2%80%94%20%D0%BE%D1%82%D1%80%D0%B8%D1%86%D0%B0%D1%82%D0%B5%D0%BB%D1%8C%D0%BD%D0%BE%20%D0%B8%D0%BD%D0%B4%D0%B5%D0%BA%D1%81%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%BD%D1%8B%D0%B5%20%D1%8D%D0%BB%D0%B5%D0%BC%D0%B5%D0%BD%D1%82%D1%8B%20%D0%BF%D0%BE%D1%81%D0%BB%D0%B5%D0%B4%D0%BE%D0%B2%D0%B0%D1%82%D0%B5%D0%BB%D1%8C%D0%BD%D0%BE%D1%81%D1%82%D0%B8%20%D1%87%D0%B8%D1%81%D0%B5%D0%BB%20%D0%A4%D0%B8%D0%B1%D0%BE%D0%BD%D0%B0%D1%87%D1%87%D0%B8.

# 8. Задайте строку из набора чисел. Напишите программу, которая покажет большее и меньшее число. В качестве символа-разделителя используйте пробел.

# 9. Задайте два числа. Напишите программу, которая найдёт НОК (наименьшее общее кратное) этих двух чисел.

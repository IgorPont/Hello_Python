# string = 'Программа'
# print(string[::-1])  # разворот строки

# 1. Напишите программу, которая принимает на вход число N и выдаёт
# последовательность из N членов. Пример: для N = 5: 1, -3, 9, -27, 81

def element_sequence(num1, num2):
    res = []
    for i in range(num1):
        res.append(num2**i)
    return res


# seq_user = int(input('Enter the number of elements in the sequence: '))
# num_user = int(input('Enter a number to display the sequence: '))
# result = element_sequence(seq_user, num_user)
# print(result)


# 2. Задайте список из целых и вещественных чисел. Отсортируйте его по возрастанию,
# от меньшего к большему и выведите в консоль.
# Зеркально разверните его и выведите на строке ниже.
#  *Пример:*
# список -> [1,0.5,15,3.4]
# Сортировка - > [0.5,1,3.4,15]
# Разворот - > [15,3.4,1,0.5]

def sort_list(any_list):
    any_list.sort()
    return any_list


def flip_list(sort_list):
    sort_list.reverse()
    return sort_list


# num_list = [1, 0.5, 15, 3.4]
# sort = sort_list(num_list)
# print(sort)
# print(flip_list(sort))


# 3. Напишите программу, в которой пользователь будет задавать две строки, а программа -
# определять количество вхождений подстроки в строку.
# *Пример:*
# "Проснувшись однажды утром после беспокойного сна."
# "Проснувшись однажды утром"
#  Количество вхождений - 1

def find_text(input_text, look_text):
    count = input_text.count(look_text)
    return count


# text = "Проснувшись однажды утром после беспокойного сна."
# looking_text = "Проснувшись однажды утром"
# print(find_text(text, looking_text))

# 4. На столе стоит две корзины с яблоками. Корзина a и корзина b.
# Введите количество яблок с клавиатуры. Затем поменяйте содержимое корзин местами
# и выведите результат.
# Например, если пользователь ввёл 5 и 7, то до обмена a=5, b=7, а после a=7 и b=5.

# basket1 = int(input('Number of apples in the first basket: '))
# basket2 = int(input('Number of apples in the second basket: '))
# print(basket1, basket2)
# basket1, basket2 = basket2, basket1
# print(basket1, basket2)


# 5. Пишем "компьютерный вирус". Запросите у пользователя любой текст.
# Сохраните вторую с начала и третью с конца буквы в отдельные переменные
# (например a и b). Замените во всём тексте букву из переменной a, на
# букву из переменной b и выведите зашифрованный текст на экран.
# Пример до шифровки: "Однажды, в студеную зимнюю пору, я из лесу вышел;
# был сильный мороз". Пример после шифровки: "Орнажры, в стуреную зимнюю пору,
# я из лесу вышел; был сильный мороз".

def computer_virus(any_text):
    symbol1 = any_text[1]
    symbol2 = any_text[-3]
    new_text = any_text.replace(symbol1, symbol2)
    return new_text


# text = "Однажды, в студеную зимнюю пору, я из лесу вышел; был сильный мороз"
# print(computer_virus(text))


# 6. Напишите программу, которая принимает на вход число и проверяет, кратно ли оно
# 5 и 10 или 15, но не 30.

def multiplicity_check(num):
    if (num % 10 == 0 or num % 15 == 0) and num % 30 != 0:
        return True
    else:
        return False


# num_user = int(input('Enter the number: '))
# print(multiplicity_check(num_user))


# 7. Программа "Калькулятор кредитов" Рассчитайте месячные выплаты
# (m) и суммарную выплату (s) по кредиту.
# О кредите известно, что он составляет n рублей, берется на y лет, под p процентов.
# Месячные выплаты находятся по формуле:
# m = (n * p * (1 + p)y) / (12 * ((1 + p)y – 1)), где p выражается в долях единицы,
# а не процентах.
# Суммарная выплата представляет собой выплаты за все месяцы каждого года:
# s = (m * 12) * y
# Запросите размер кредита в рублях и копейках, количество целых лет (в годах)
# и процентную ставку в процентах с точностью до сотых.
# Распечатайте месячные выплаты и сумму кредита в рублях и копейках.
# *Пример:*
# - Введите сумму кредита (рубли и копейки): 543.25
# - Введите срок кредита в годах (целое число): 2
# - Введите процентную ставку в процентах с точностью до сотых (без знака "%"): 7.45
# Месячные выплаты составят 25.2 руб.
# Суммарная выплата равна 604.68 руб.
